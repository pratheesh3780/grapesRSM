gen_level_5 <- function(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5) {
  # x min
  # y max
  mid1 <- (x1 + y1) / 2
  l11 <- x1
  l21 <- (((3.000*mid1)-y1)/2.000)
  l31 <- mid1
  l41 <- ((y1+(1.000*mid1))/2.000)
  l51 <- y1
  levels1 <- as.vector(c(l11, l21, l31, l41, l51))
  levels1 <- round(levels1, 3)
  L1 <- levels1
  
  mid2 <- (x2 + y2) / 2
  l12 <- x2
  l22 <- (((3.000*mid2)-y2)/2.000)
  l32 <- mid2
  l42 <- ((y2+(1.000*mid2))/2.000)
  l52 <- y2
  levels2 <- as.vector(c(l12, l22, l32, l42, l52))
  levels2 <- round(levels2, 3)
  L2 <- levels2
  
  mid3 <- (x3 + y3) / 2
  l13 <- x3
  l23 <- (((3.000*mid3)-y3)/2.000)
  l33 <- mid3
  l43 <- ((y3+(1.000*mid3))/2.000)
  l53 <- y3
  levels3 <- as.vector(c(l13, l23, l33, l43, l53))
  levels3 <- round(levels3, 3)
  L3 <- levels3
  
  mid4 <- (x4 + y4) / 2
  l14 <- x4
  l24 <- (((3.000*mid4)-y4)/2.000)
  l34 <- mid4
  l44 <- ((y4+(1.000*mid4))/2.000)
  l54 <- y4
  levels4 <- as.vector(c(l14, l24, l34, l44, l54))
  levels4 <- round(levels4, 3)
  L4 <- levels4
  
  mid5 <- (x5 + y5) / 2
  l15 <- x5
  l25 <- (((3.000*mid5)-y5)/2.000)
  l35 <- mid5
  l45 <- ((y5+(1.000*mid5))/2.000)
  l55 <- y5
  levels5 <- as.vector(c(l15, l25, l35, l45, l55))
  levels5 <- round(levels5, 3)
  L5 <- levels5
  
  # design matrix
  D <- matrix(c(
    -1, -1,	-1,	-1,	+1,
    -1,	-1,	-1,	 1,	-1,
    -1,	-1,	 1,	-1,	-1,
    -1,	-1,	 1,	 1,	 1,	
    -1,	 1,	-1,	-1,	-1,	
    -1,	 1,	-1,	 1,	 1,	
    -1,	 1,	 1,	-1,	 1,	
    -1,	 1,	 1,	 1,	-1,	
     1,	-1,	-1,	-1,	-1,	
     1,	-1,	-1,	 1,	 1,	
     1,	-1,	 1,	-1,	 1,	
     1,	-1,	 1,	 1,	-1,
     1,	 1,	-1,	-1,	 1,	
     1,	 1,	-1,	 1,	-1,
     1,  1,	 1,	-1,	-1,	
     1,	 1,	 1,	 1,	 1,	
     0,	 0,	 0,	 0,	 0,	
     0,	 0,	 0,	 0,	 0,	
     0,	 0,	 0,	 0,	 0,	
     0,	 0,	 0,	 0,	 0,
     0,	 0,	 0,	 0,	 0,
     0,	 0,	 0,	 0,	 0,	
    -2,	 0,	 0,	 0,	 0,	
    +2,	 0,	 0,	 0,	 0,	
     0,	-2,	 0,	 0,	 0,	
     0,	+2,	 0,	 0,	 0,	
     0,	 0,	-2,	 0,  0,	
     0,	 0,	+2,	 0,	 0,	
     0,	 0,	 0,	-2,	 0,	
     0,	 0,	 0,	+2,	 0,	
     0,	 0,	 0,	 0,	-2,	
     0,	 0,	 0,	 0,	+2,	
     0,	 0,	 0,	 0,	 0
    
  ), nrow = 33, ncol = 5, byrow = TRUE)
  run <- as.data.frame(c(1:33))
  obs <- as.data.frame(matrix(0, 33, 1))
  
  #function to round
  round_to_high <-function(x){
    if(x<=0){
      y=floor(x)
    }
    else if (x>0){
      y= ceiling(x)
    }
    y
  }
  
  Factor_1 <- matrix(0, 33, 1)
  for (i in 1:33) {
    Factor_1[i, 1] <- c(L1[round_to_high(D[i, 1]) + 3])
  }
  
  Factor_2 <- matrix(0, 33, 1)
  for (i in 1:33) {
    Factor_2[i, 1] <- c(L2[round_to_high(D[i, 2]) + 3])
  }
  
  Factor_3 <- matrix(0, 33, 1)
  for (i in 1:33) {
    Factor_3[i, 1] <- c(L3[round_to_high(D[i, 3]) + 3])
  }
  
  Factor_4 <- matrix(0, 33, 1)
  for (i in 1:33) {
    Factor_4[i, 1] <- c(L4[round_to_high(D[i, 4]) + 3])
  }
  
  Factor_5 <- matrix(0, 33, 1)
  for (i in 1:33) {
    Factor_5[i, 1] <- c(L5[round_to_high(D[i, 5]) + 3])
  }
  
  Final_des <- cbind(run, D, Factor_1, Factor_2, Factor_3, Factor_4, Factor_5, obs)
  colnames(Final_des) <- c("runs", "X1","X2","X3", "x4", "x5", "T1", "T2","T3", "T4", "T5", "Observation")
  Final_des
}
View(gen_level_5)

mydata <- gen_level_5(x1, y1, x2, y2, x3, y3, x4, y4, x5, y5)

groupT1 <- mydata$T1
groupT2 <- mydata$T2
groupT3 <- mydata$T3
groupT4 <- mydata$T4
groupT5 <- mydata$T5

Combinedgroups <- data.frame(cbind(groupT1,groupT2,groupT3,groupT4,groupT5))
Stacking <- stack(Combinedgroups)
Anovares <- aov(values ~ ind, data=Stacking)
summary(Anovares)

#install.packages("rsm")
library(rsm)
model2 <- rsm(Observation ~ SO(T1,T2,T3,T4,T5), data=mydata)
summary(model2)

library(ggplot2)
contour(yield, ~ N + P + K, at = summary(model2)$canonical$xs , col = c("blue","red","green"))

library(plot3D)
library(plotly)
library(rgl)

scatter3D(x=mydata$T1, y=mydata$T2, z=mydata$T3, bty="b2", pch=20, cex=2, tickttype="detailed", xlab="T1", ylab="T2", zlab="T3", phi=45)
plot3d(x=mydata$T1, y=mydata$T2, z=mydata$T3, col=c("blue", "green", "yellow", "orange", "red"))
